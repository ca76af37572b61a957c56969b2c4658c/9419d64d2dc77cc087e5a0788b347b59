# LAB 4 Task 4: Install MySQL server

- name: Install 'mysql-server'
  apt:
    name: mysql-server
    #update_cache: yes
  notify: Restart mysql ## why? but needed


## LAB 4 Task 7: Add MySQL database

- name: Install 'python3-mysql'
  apt:
    name: python3-pymysql


## LAB 4 Task 5: Configure MySQL server

- name: Copy the mysql config file and restart mysql server
  template:
    src: override.cnf.j2
    dest: /etc/mysql/mysql.conf.d/override.cnf
    mode: 0744
  notify: 
   - Restart mysql


# LAB 4 Task 4: Install MySQL server

- name: Start mysql server
  service:
    name: mysql
    state: started
    enabled: yes
  #become: yes # why?


- name: MySQL database
  #community.mysql.mysql_db:
  mysql_db:
    name: "{{ mysql_database }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true


## LAB 4 Task 8: Add MySQL user

- name: MySQL user
  #community.mysql.mysql_user:
  mysql_user:
    name: "{{ mysql_user }}"
    password: "{{ mysql_user_pass }}"
    host: "%"
    priv: "{{ mysql_database }}.*:ALL"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true
  notify:
    #- Make replication read only
    - Reset MySQL source


# LAB 11 Task 3
- name: Create MySQL replication user
  mysql_user:
    name: "{{ replication }}"
    password: "{{ replication_pass }}"
    priv: "*.*:REPLICATION SLAVE"
    host: "%"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true

# LAB 11 Task 6

- name: Make replication read only
  mysql_variables:
    variable: read_only
    value: "{{ 'OFF' if inventory_hostname == mysql_host else 'ON' }}"
    mode: persist
    login_unix_socket: /var/run/mysqld/mysqld.sock
  notify:
    - Reset MySQL source
    - Reset MySQL replica

#- name: Sleep for 10 seconds and continue with play
#  wait_for:
#    timeout: 10

- name: Execute handlers preemptively
  meta: flush_handlers


# LAB 4 Task 4: Install MySQL server

- name: Start mysql server
  service:
    name: mysql
    state: started
    enabled: yes
  #become: yes # why?
  